h4,
.h4 {
  font-size: 1.125rem;
}

.font-weight-semibold {
  font-weight: 500;
}

.text-muted {
  color: #8492a6 !important;
  font-size: 13px;
}

.brround {
  border-radius: 50%;
}

.h-9 {
  height: 6rem;
}

.w-9 {
  width: 6rem;
}

.text-one-line {
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

label {
  font-weight: 700;
}

.flex {
  display: flex;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-around {
  justify-content: space-around;
}

.flex-end {
  @extend .flex;
  justify-content: flex-end;
}

.flex-start {
  @extend .flex;
  justify-content: flex-start;
}

.flex-1 {
  flex: 1;
}

.flex-column {
  flex-direction: column;
}

.flex-between {
  justify-content: space-between;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.full-height-vh {
  height: 100vh;
}

.pointer {
  cursor: pointer;
}

.user-select {
  user-select: none;
}

.box-sizing {
  box-sizing: border-box;
}

.border-none {
  border: none !important;
}

.object-fit-contain {
  object-fit: contain;
}

.text-transform-uppercase {
  text-transform: uppercase;
}

a {
  color: inherit;
  text-decoration: none;
  &:hover {
    color: inherit;
    text-decoration: none;
  }
}

.border-radius-circle {
  border-radius: 50%;
}

.d-table-caption {
  display: table-caption;
}

.border-color {
  border: 1px solid #ccc;
}

.color-default {
  color: rgba(0, 0, 0, 0.7);
}

ul {
  padding: 0px;
}

li {
  list-style-type: none;
}

.bold {
  font-weight: 600;
}

.co-white {
  color: #fff;
}

.co-green {
  color: $green;
}

.co-blue {
  color: #3899ec;
}

.co-default {
  color: #868686;
}

.co-purple {
  color: #556ee6;
}

.co-green {
  color: #269c71;
}

.co-red {
  color: red !important;
}

.bg-green {
  background: #269c71;
}

.bg-transparent {
  background: transparent;
}

.text-upcase {
  text-transform: uppercase;
}

.text-size-14 {
  font-size: 14px;
}

.py-15px {
  padding-top: 15px;
  padding-bottom: 15px;
}

i {
  &:hover {
    transform: scale(1.1);
  }
}

.hover-default {
  background: rgba(0, 0, 0, 0.1);
}
.w-5 {
  width: 50%;
}

.break {
  width: 100%;
  height: 1px;
  background: #ddd;
}

.break-right {
  border-right: 1px solid #ddd;
}

.h-auto {
  height: auto !important;
}

.btn-primary,
.bg-primary,
.bg-site-primary {
  background: $primary-color;
  background-color: $primary-color;
}

.btn-outline-primary {
  border: 1px solid $primary-color;
  color: $primary-color;
}

.anticon {
  display: inline-block;
  color: inherit;
  font-style: normal;
  line-height: 0;
  text-align: center;
  text-transform: none;
  vertical-align: -0.125em;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.anticon-spin {
  display: inline-block;
  animation: loadingCircle 0.6s linear infinite;
}

.view-large {
  min-width: 300px;
}

.view-small {
  min-width: 150px;
  max-width: 150px;
  width: 150px !important;
}

.view-mini {
  min-width: 50px;
}

.view-medium {
  min-width: 200px;
  max-width: 200px;
  width: 200px !important;
}

.white-space-normal {
  white-space: normal !important;
  word-break: break-all;
}

.overflow-x-none {
  overflow-x: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

::-webkit-scrollbar {
  width: 14px;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 14px 14px transparent;
  border: solid 4px transparent;
}

::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 14px 14px #bbbbbe;
  border: solid 4px transparent;
  border-radius: 14px;
}

/* set button(top and bottom of the scrollbar) */
::-webkit-scrollbar-button {
  display: none;
}

@keyframes loadingCircle {
  100% {
    transform: rotate(1turn);
  }
}

$fs: 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 35;
$width: 10, 15, 20, 25, 30, 33, 35, 40, 50, 75, 100;
$height: 30, 40;
$fw: 200, 300, 400, 500, 600, 700, 900;

@each $item in $fs {
  .fs-#{$item} {
    font-size: unquote($item + "px") !important;
  }
}

@each $w in $width {
  .w-#{$w} {
    width: unquote($w + "%");
  }
}

@each $h in $height {
  .h-#{$h} {
    height: unquote($h + "px") !important;
    min-height: unquote($h + "px");
  }
}

@each $w in $fw {
  .fw-#{$w} {
    font-weight: $w;
  }
}
